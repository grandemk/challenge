digraph code {
	graph [bgcolor=white];
	node [color=lightgray, style=filled shape=box fontname="Courier" fontsize="8"];
 "0x08048590_0x08048590" [URL="entry0/0x08048590", color="lightgray", label="/ (fcn) entry0 34\l| ;-- entry0:\l| ;-- sym._start:\l| ;-- section_end..plt:\l| ;-- entry0:\l| 0x08048590   xor ebp, ebp                                            ; [12] va=0x08048590 pa=0x00000590 sz=1410 vsz=1410 rwx=-r-x .text\l| 0x08048592   pop esi\l| 0x08048593   mov ecx, esp\l| 0x08048595   and esp, 0xfffffff0\l| 0x08048598   push eax\l| 0x08048599   push esp\l| 0x0804859a   push edx\l| 0x0804859b   push sym.__libc_csu_fini                                ; sym.__libc_csu_fini\l| 0x080485a0   push sym.__libc_csu_init                                ; \"UW1.VS.......M.\" @ 0x8048aa0\l| 0x080485a5   push ecx\l| 0x080485a6   push esi\l| 0x080485a7   push sym.main                                           ; sym.main\l| 0x080485ac   call sym.imp.__libc_start_main\l|    sym.imp.__libc_start_main(unk, unk, unk, unk, unk, unk, unk, unk)\l\\ 0x080485b1   hlt\l"]
 "0x08048530_0x08048530" [URL="sym.imp.__libc_start_main/0x08048530", color="lightgray", label="/ (fcn) sym.imp.__libc_start_main 6\l| ; CALL XREF from 0x080485ac (entry0)\l| ;-- sym.imp.__libc_start_main:\l| 0x08048530   jmp dword [reloc.__libc_start_main_44]                  ; \"6...F...V...f...v.......\" @ 0x8049e2c\l"]
 "0x08048536_0x08048480" [URL="fcn.08048536/0x08048480", color="lightgray", label="|- section..plt 12\l| | ; XREFS: JMP 0x0804853b  JMP 0x0804849b  JMP 0x080484ab  \l| ; XREFS: JMP 0x080484bb  JMP 0x080484cb  JMP 0x080484db  \l| ; XREFS: JMP 0x080484eb  JMP 0x0804854b  JMP 0x0804855b  \l| ; XREFS: JMP 0x0804856b  JMP 0x0804857b  JMP 0x0804858b  \l| ; XREFS: JMP 0x0804852b  JMP 0x0804850b  JMP 0x0804851b  \l| ;-- section..plt:\l| 0x08048480   push dword [0x8049dfc]                                  ; [11] va=0x08048480 pa=0x00000480 sz=272 vsz=272 rwx=-r-x .plt\l\\ 0x08048486   jmp dword [0x8049e00]\l"]
	"0x08048536_0x08048536" -> "0x08048536_0x08048480" [color="blue"];
 "0x08048536_0x08048536" [URL="fcn.08048536/0x08048536", color="lightgray", label="/ (fcn) fcn.08048536 10\l| ;-- fcn.08048536:\l| 0x08048536   push 0x50                                               ; 'P'\l\\ 0x0804853b   jmp section..plt\l"]
 "0x0804848c_0x0804848c" [URL="fcn.0804848c/0x0804848c", color="lightgray", label="/ (fcn) fcn.0804848c 10\l| ;-- fcn.0804848c:\l| 0x0804848c   add byte [eax], al\l| 0x0804848e   add byte [eax], al\l| ; CALL XREF from 0x08048990 (sym.unpack)\l| ; CALL XREF from 0x08048a86 (sym.unpack)\l| ;-- sym.imp.mprotect:\l\\ 0x08048490   jmp dword [reloc.mprotect_4]                            ; reloc.mprotect_4\l"]
	"0x08048496_0x08048496" -> "0x08048496_0x08048480" [color="blue"];
 "0x08048496_0x08048496" [URL="fcn.08048496/0x08048496", color="lightgray", label="/ (fcn) fcn.08048496 10\l| 0x08048496   push 0\l\\ 0x0804849b   jmp section..plt\l"]
 "0x080484a0_0x080484a0" [URL="sym.imp.memcpy/0x080484a0", color="lightgray", label="/ (fcn) sym.imp.memcpy 6\l| ; CALL XREF from 0x08048a6c (sym.unpack)\l| ;-- sym.imp.memcpy:\l| 0x080484a0   jmp dword [reloc.memcpy_8]                              ; reloc.memcpy_8\l"]
	"0x080484a6_0x080484a6" -> "0x080484a6_0x08048480" [color="blue"];
 "0x080484a6_0x080484a6" [URL="fcn.080484a6/0x080484a6", color="lightgray", label="/ (fcn) fcn.080484a6 10\l| 0x080484a6   push 8\l\\ 0x080484ab   jmp section..plt\l"]
 "0x080484b0_0x080484b0" [URL="sym.imp.fclose/0x080484b0", color="lightgray", label="/ (fcn) sym.imp.fclose 6\l| ; CALL XREF from 0x080488e2 (sym.check)\l| ;-- sym.imp.fclose:\l| 0x080484b0   jmp dword [reloc.fclose_12]                             ; reloc.fclose_12\l"]
	"0x080484b6_0x080484b6" -> "0x080484b6_0x08048480" [color="blue"];
 "0x080484b6_0x080484b6" [URL="fcn.080484b6/0x080484b6", color="lightgray", label="/ (fcn) fcn.080484b6 10\l| 0x080484b6   push 0x10\l\\ 0x080484bb   jmp section..plt\l"]
 "0x080484c0_0x080484c0" [URL="sym.imp.sleep/0x080484c0", color="lightgray", label="/ (fcn) sym.imp.sleep 6\l| ; CALL XREF from 0x08048943 (sym.check)\l| ;-- sym.imp.sleep:\l| 0x080484c0   jmp dword [reloc.sleep_16]                              ; reloc.sleep_16\l"]
	"0x080484c6_0x080484c6" -> "0x080484c6_0x08048480" [color="blue"];
 "0x080484c6_0x080484c6" [URL="fcn.080484c6/0x080484c6", color="lightgray", label="/ (fcn) fcn.080484c6 10\l| 0x080484c6   push 0x18\l\\ 0x080484cb   jmp section..plt\l"]
 "0x080484d0_0x080484d0" [URL="sym.imp.popen/0x080484d0", color="lightgray", label="/ (fcn) sym.imp.popen 6\l| ; CALL XREF from 0x0804889e (sym.check)\l| ;-- sym.imp.popen:\l| 0x080484d0   jmp dword [reloc.popen_20]                              ; reloc.popen_20\l"]
	"0x080484d6_0x080484d6" -> "0x080484d6_0x08048480" [color="blue"];
 "0x080484d6_0x080484d6" [URL="fcn.080484d6/0x080484d6", color="lightgray", label="/ (fcn) fcn.080484d6 10\l| 0x080484d6   push 0x20                                               ; \"D.\" 0x00000020  ; \"D.\" @ 0x20\l\\ 0x080484db   jmp section..plt\l"]
 "0x080484e0_0x080484e0" [URL="sym.imp.wait/0x080484e0", color="lightgray", label="/ (fcn) sym.imp.wait 6\l| ; CALL XREF from 0x080488fd (sym.check)\l| ;-- sym.imp.wait:\l| 0x080484e0   jmp dword [reloc.wait_24]                               ; reloc.wait_24\l"]
	"0x080484e6_0x080484e6" -> "0x080484e6_0x08048480" [color="blue"];
 "0x080484e6_0x080484e6" [URL="fcn.080484e6/0x080484e6", color="lightgray", label="/ (fcn) fcn.080484e6 10\l| 0x080484e6   push 0x28                                               ; '('\l\\ 0x080484eb   jmp section..plt\l"]
 "0x080484f0_0x080484f0" [URL="sym.imp.puts/0x080484f0", color="lightgray", label="/ (fcn) sym.imp.puts 6\l| ; CALL XREF from 0x0804892c (sym.check)\l| ; CALL XREF from 0x080488ca (sym.check)\l| ;-- sym.imp.puts:\l| 0x080484f0   jmp dword [reloc.puts_28]                               ; reloc.puts_28\l"]
 "0x08048540_0x08048540" [URL="sym.imp.fgetc/0x08048540", color="lightgray", label="/ (fcn) sym.imp.fgetc 6\l| ; CALL XREF from 0x080488b5 (sym.check)\l| ;-- sym.imp.fgetc:\l| 0x08048540   jmp dword [reloc.fgetc_48]                              ; \"F...V...f...v.......\" @ 0x8049e30\l"]
	"0x08048546_0x08048546" -> "0x08048546_0x08048480" [color="blue"];
 "0x08048546_0x08048546" [URL="fcn.08048546/0x08048546", color="lightgray", label="/ (fcn) fcn.08048546 10\l| 0x08048546   push 0x58                                               ; 'X'\l\\ 0x0804854b   jmp section..plt\l"]
 "0x08048550_0x08048550" [URL="sym.imp.fork/0x08048550", color="lightgray", label="/ (fcn) sym.imp.fork 6\l| ; CALL XREF from 0x080488ea (sym.check)\l| ;-- sym.imp.fork:\l| 0x08048550   jmp dword [reloc.fork_52]                               ; \"V...f...v.......\" @ 0x8049e34\l"]
	"0x08048556_0x08048556" -> "0x08048556_0x08048480" [color="blue"];
 "0x08048556_0x08048556" [URL="fcn.08048556/0x08048556", color="lightgray", label="/ (fcn) fcn.08048556 10\l| 0x08048556   push 0x60                                               ; '`'\l\\ 0x0804855b   jmp section..plt\l"]
 "0x08048560_0x08048560" [URL="sym.imp.getppid/0x08048560", color="lightgray", label="/ (fcn) sym.imp.getppid 6\l| ; CALL XREF from 0x08048907 (sym.check)\l| ;-- sym.imp.getppid:\l| 0x08048560   jmp dword [reloc.getppid_56]                            ; \"f...v.......\" @ 0x8049e38\l"]
	"0x08048566_0x08048566" -> "0x08048566_0x08048480" [color="blue"];
 "0x08048566_0x08048566" [URL="fcn.08048566/0x08048566", color="lightgray", label="/ (fcn) fcn.08048566 10\l| 0x08048566   push 0x68                                               ; 'h'\l\\ 0x0804856b   jmp section..plt\l"]
 "0x08048570_0x08048570" [URL="sym.imp.ptrace/0x08048570", color="lightgray", label="/ (fcn) sym.imp.ptrace 6\l| ; CALL XREF from 0x08048918 (sym.check)\l| ; CALL XREF from 0x08048954 (sym.check)\l| ;-- sym.imp.ptrace:\l| 0x08048570   jmp dword [reloc.ptrace_60]                             ; \"v.......\" @ 0x8049e3c\l"]
	"0x08048576_0x08048576" -> "0x08048576_0x08048480" [color="blue"];
 "0x08048576_0x08048576" [URL="fcn.08048576/0x08048576", color="lightgray", label="/ (fcn) fcn.08048576 10\l| 0x08048576   push 0x70                                               ; 'p'\l\\ 0x0804857b   jmp section..plt\l"]
 "0x08048580_0x08048580" [URL="sym.imp.calloc/0x08048580", color="lightgray", label="/ (fcn) sym.imp.calloc 6\l| ; CALL XREF from 0x080489f7 (sym.unpack)\l| ;-- sym.imp.calloc:\l| 0x08048580   jmp dword [reloc.calloc_64]                             ; reloc.calloc_64\l"]
	"0x08048586_0x08048586" -> "0x08048586_0x08048480" [color="blue"];
 "0x08048586_0x08048586" [URL="fcn.08048586/0x08048586", color="lightgray", label="/ (fcn) fcn.08048586 10\l| 0x08048586   push 0x78                                               ; 'x'\l\\ 0x0804858b   jmp section..plt\l"]
 "0x080485c0_0x080485c0" [URL="sym.__x86.get_pc_thunk.bx/0x080485c0", color="lightgray", label="/ (fcn) sym.__x86.get_pc_thunk.bx 4\l| ; CALL XREF from 0x08048aa6 (sym.__libc_csu_init)\l| ; CALL XREF from 0x08048b18 (section_end..text)\l| ; CALL XREF from 0x08048458 (section..init)\l| ;-- sym.__x86.get_pc_thunk.bx:\l| 0x080485c0   mov ebx, dword [esp]\l\\ 0x080485c3   ret\l"]
	"0x080485d0_0x080485d0" -> "0x080485d0_0x080485f9" [color="green"];
	"0x080485d0_0x080485d0" -> "0x080485d0_0x080485df" [color="red"];
 "0x080485d0_0x080485d0" [URL="sym.deregister_tm_clones/0x080485d0", color="lightgray", label="/ (fcn) sym.deregister_tm_clones 43\l| ; CALL XREF from 0x0804864f (fcn.08048635)\l| ;-- sym.deregister_tm_clones:\l| 0x080485d0   mov eax, 0x8049e4f                                      ; \": (Debian 4.9.2-16) 4.9.2\" @ 0x8049e4f\l| 0x080485d5   sub eax, sym.__TMC_END__\l| 0x080485da   cmp eax, 6\l| 0x080485dd   jbe 0x80485f9                                          \l"]
	"0x080485d0_0x080485df" -> "0x080485d0_0x080485f9" [color="green"];
	"0x080485d0_0x080485df" -> "0x080485d0_0x080485e8" [color="red"];
 "0x080485d0_0x080485df" [URL="sym.deregister_tm_clones/0x080485df", color="lightgray", label="| 0x080485df   mov eax, 0\l| 0x080485e4   test eax, eax\l| 0x080485e6   je 0x80485f9                                           \l"]
	"0x080485d0_0x080485e8" -> "0x080485d0_0x080485f9" [color="blue"];
 "0x080485d0_0x080485e8" [URL="sym.deregister_tm_clones/0x080485e8", color="lightgray", label="| 0x080485e8   push ebp\l| 0x080485e9   mov ebp, esp\l| 0x080485eb   sub esp, 0x14\l| 0x080485ee   push sym.__TMC_END__                                    ; \"GCC: (Debian 4.9.2-16) 4.9.2\" @ 0x8049e4c\l| 0x080485f3   call eax\l|    unk(unk) ; section_end.phdr1+-134524157\l| 0x080485f5   add esp, 0x10\l| 0x080485f8   leave\l"]
 "0x080485d0_0x080485f9" [URL="sym.deregister_tm_clones/0x080485f9", color="lightgray", label="  ; JMP XREF from 0x080485dd (sym.deregister_tm_clones)\l  ; JMP XREF from 0x080485e6 (sym.deregister_tm_clones)\l\\ 0x080485f9   ret\l"]
	"0x080485fc_0x080485fc" -> "0x080485fc_0x08048633" [color="green"];
	"0x080485fc_0x080485fc" -> "0x080485fc_0x08048618" [color="red"];
 "0x080485fc_0x080485fc" [URL="fcn.080485fc/0x080485fc", color="lightgray", label="/ (fcn) fcn.080485fc 57\l| ;-- fcn.080485fc:\l| 0x080485fc   lea esi, [esi]\l| ; JMP XREF from 0x0804866b (sym.frame_dummy)\l| ; JMP XREF from 0x08048686 (sym.frame_dummy)\l| ;-- sym.register_tm_clones:\l| 0x08048600   mov eax, sym.__TMC_END__                                ; \"GCC: (Debian 4.9.2-16) 4.9.2\" @ 0x8049e4c\l| 0x08048605   sub eax, sym.__TMC_END__\l| 0x0804860a   sar eax, 2\l| 0x0804860d   mov edx, eax\l| 0x0804860f   shr edx, 0x1f\l| 0x08048612   add eax, edx\l| 0x08048614   sar eax, 1\l| 0x08048616   je 0x8048633                                           \l"]
	"0x080485fc_0x08048618" -> "0x080485fc_0x08048633" [color="green"];
	"0x080485fc_0x08048618" -> "0x080485fc_0x08048621" [color="red"];
 "0x080485fc_0x08048618" [URL="fcn.080485fc/0x08048618", color="lightgray", label="| 0x08048618   mov edx, 0\l| 0x0804861d   test edx, edx\l| 0x0804861f   je 0x8048633                                           \l"]
	"0x080485fc_0x08048621" -> "0x080485fc_0x08048633" [color="blue"];
 "0x080485fc_0x08048621" [URL="fcn.080485fc/0x08048621", color="lightgray", label="| 0x08048621   push ebp\l| 0x08048622   mov ebp, esp\l| 0x08048624   sub esp, 0x10\l| 0x08048627   push eax\l| 0x08048628   push sym.__TMC_END__                                    ; \"GCC: (Debian 4.9.2-16) 4.9.2\" @ 0x8049e4c\l| 0x0804862d   call edx\l|    unk(unk, unk) ; section_end.phdr1+-134524157\l| 0x0804862f   add esp, 0x10\l| 0x08048632   leave\l"]
 "0x080485fc_0x08048633" [URL="fcn.080485fc/0x08048633", color="lightgray", label="  ; JMP XREF from 0x08048616 (fcn.080485fc)\l  ; JMP XREF from 0x0804861f (fcn.080485fc)\l\\ 0x08048633   ret\l"]
	"0x08048635_0x08048635" -> "0x08048635_0x0804865c" [color="green"];
	"0x08048635_0x08048635" -> "0x08048635_0x08048649" [color="red"];
 "0x08048635_0x08048635" [URL="fcn.08048635/0x08048635", color="lightgray", label="/ (fcn) fcn.08048635 41\l| ;-- fcn.08048635:\l| 0x08048635   lea esi, [esi]\l| 0x08048639   lea edi, [edi]\l| ;-- sym.__do_global_dtors_aux:\l| 0x08048640   cmp byte [sym.__TMC_END__], 0\l| 0x08048647   jne 0x804865c                                          \l"]
	"0x08048635_0x08048649" -> "0x08048635_0x0804865c" [color="blue"];
 "0x08048635_0x08048649" [URL="fcn.08048635/0x08048649", color="lightgray", label="| 0x08048649   push ebp\l| 0x0804864a   mov ebp, esp\l| 0x0804864c   sub esp, 8\l| 0x0804864f   call sym.deregister_tm_clones\l|    sym.deregister_tm_clones()\l| 0x08048654   mov byte [sym.__TMC_END__], 1                            ; [0x8049e4c:1]=71 ; \"GCC: (Debian 4.9.2-16) 4.9.2\" @ 0x8049e4c\l| 0x0804865b   leave\l"]
 "0x08048635_0x0804865c" [URL="fcn.08048635/0x0804865c", color="lightgray", label="  ; JMP XREF from 0x08048647 (fcn.08048635)\l\\ 0x0804865c   ret\l"]
	"0x08048660_0x08048660" -> "0x08048660_0x08048670" [color="green"];
	"0x08048660_0x08048660" -> "0x08048660_0x0804866b" [color="red"];
 "0x08048660_0x08048660" [URL="sym.frame_dummy/0x08048660", color="lightgray", label="/ (fcn) sym.frame_dummy 43\l| ;-- sym.frame_dummy:\l| 0x08048660   mov eax, sym.__JCR_END__                                ; section..jcr\l| 0x08048665   mov edx, dword [eax]\l| 0x08048667   test edx, edx\l| 0x08048669   jne 0x8048670                                          \l"]
	"0x08048660_0x08048670" -> "0x08048660_0x0804866b" [color="green"];
	"0x08048660_0x08048670" -> "0x08048660_0x08048679" [color="red"];
 "0x08048660_0x08048670" [URL="sym.frame_dummy/0x08048670", color="lightgray", label="  ; JMP XREF from 0x08048669 (sym.frame_dummy)\l| 0x08048670   mov edx, 0\l| 0x08048675   test edx, edx\l| 0x08048677   je 0x804866b                                           \l"]
	"0x08048660_0x0804866b" -> "0x08048660_0x08048600" [color="blue"];
 "0x08048660_0x0804866b" [URL="sym.frame_dummy/0x0804866b", color="lightgray", label="  ; JMP XREF from 0x08048677 (sym.frame_dummy)\l| 0x0804866b   jmp sym.register_tm_clones                               ; fcn.080485fc+0x4\l"]
	"0x08048660_0x08048600" -> "0x08048660_0x08048633" [color="blue"];
 "0x08048660_0x08048600" [URL="sym.frame_dummy/0x08048600", color="lightgray", label="  ; JMP XREF from 0x0804866b (sym.frame_dummy)\l  ; JMP XREF from 0x08048686 (sym.frame_dummy)\l  ;-- sym.register_tm_clones:\l| 0x08048600   mov eax, sym.__TMC_END__                                ; \"GCC: (Debian 4.9.2-16) 4.9.2\" @ 0x8049e4c\l| 0x08048605   sub eax, sym.__TMC_END__\l| 0x0804860a   sar eax, 2\l| 0x0804860d   mov edx, eax\l| 0x0804860f   shr edx, 0x1f\l| 0x08048612   add eax, edx\l| 0x08048614   sar eax, 1\l| 0x08048616   je 0x8048633                                           \l"]
 "0x08048660_0x08048633" [URL="sym.frame_dummy/0x08048633", color="lightgray", label="  ; JMP XREF from 0x08048616 (fcn.080485fc)\l  ; JMP XREF from 0x0804861f (fcn.080485fc)\l\\ 0x08048633   ret\l"]
	"0x08048660_0x08048618" -> "0x08048660_0x08048633" [color="blue"];
 "0x08048660_0x08048618" [URL="sym.frame_dummy/0x08048618", color="lightgray", label="| 0x08048618   mov edx, 0\l| 0x0804861d   test edx, edx\l| 0x0804861f   je 0x8048633                                           \l"]
	"0x08048660_0x08048621" -> "0x08048660_0x08048633" [color="blue"];
 "0x08048660_0x08048621" [URL="sym.frame_dummy/0x08048621", color="lightgray", label="| 0x08048621   push ebp\l| 0x08048622   mov ebp, esp\l| 0x08048624   sub esp, 0x10\l| 0x08048627   push eax\l| 0x08048628   push sym.__TMC_END__                                    ; \"GCC: (Debian 4.9.2-16) 4.9.2\" @ 0x8049e4c\l| 0x0804862d   call edx\l|    unk(unk, unk) ; section_end.phdr1+-134524157\l| 0x0804862f   add esp, 0x10\l| 0x08048632   leave\l"]
	"0x08048660_0x08048679" -> "0x08048660_0x08048600" [color="blue"];
 "0x08048660_0x08048679" [URL="sym.frame_dummy/0x08048679", color="lightgray", label="| 0x08048679   push ebp\l| 0x0804867a   mov ebp, esp\l| 0x0804867c   sub esp, 0x14\l| 0x0804867f   push eax\l| 0x08048680   call edx\l|    unk(unk) ; section_end.phdr1+-134524157\l| 0x08048682   add esp, 0x10\l| 0x08048685   leave\l\\ 0x08048686   jmp sym.register_tm_clones                               ; fcn.080485fc+0x4\l"]
	"0x0804868b_0x0804868b" -> "0x0804868b_0x080486d3" [color="green"];
	"0x0804868b_0x0804868b" -> "0x0804868b_0x080486a6" [color="red"];
 "0x0804868b_0x0804868b" [URL="sym.main/0x0804868b", color="lightgray", label="/ (fcn) sym.main 87\l| ; var int local_2      @ ebp-0x8\l| ; DATA XREF from 0x080485a7 (entry0)\l| ;-- main:\l| ;-- sym.main:\l| 0x0804868b   lea ecx, [esp + 4]                                       ; 0x4 \l| 0x0804868f   and esp, 0xfffffff0\l| 0x08048692   push dword [ecx - 4]\l| 0x08048695   push ebp\l| 0x08048696   mov ebp, esp\l| 0x08048698   push ebx\l| 0x08048699   push ecx\l| 0x0804869a   mov ebx, ecx\l| 0x0804869c   call sym.unpack\l|    sym.unpack(unk, unk, unk, unk)\l| 0x080486a1   cmp dword [ebx], 1                                       ; [0x1:4]=0x1464c45 \l| 0x080486a4   jle 0x80486d3                                          \l"]
	"0x0804868b_0x080486a6" -> "0x0804868b_0x080486d3" [color="green"];
	"0x0804868b_0x080486a6" -> "0x0804868b_0x080486bf" [color="red"];
 "0x0804868b_0x080486a6" [URL="sym.main/0x080486a6", color="lightgray", label="| 0x080486a6   mov eax, dword [ebx + 4]                                 ; [0x4:4]=0x10101 \l| ; JMP XREF from 0x0804871c (sym.func_to_pack)\l| 0x080486a9   add eax, 4\l| 0x080486ac   mov eax, dword [eax]\l| 0x080486ae   sub esp, 0xc\l| 0x080486b1   push eax\l| 0x080486b2   call sym.imp.strlen\l|    sym.imp.strlen(unk)\l| 0x080486b7   add esp, 0x10\l| 0x080486ba   cmp eax, 0xa\l| 0x080486bd   jne 0x80486d3                                          \l"]
	"0x0804868b_0x080486bf" -> "0x0804868b_0x080486d3" [color="blue"];
 "0x0804868b_0x080486bf" [URL="sym.main/0x080486bf", color="lightgray", label="| 0x080486bf   mov eax, dword [ebx + 4]                                 ; [0x4:4]=0x10101 \l| 0x080486c2   add eax, 4\l| 0x080486c5   mov eax, dword [eax]\l| 0x080486c7   sub esp, 0xc\l| 0x080486ca   push eax\l| 0x080486cb   call sym.func_to_pack\l|    sym.func_to_pack(unk)\l| 0x080486d0   add esp, 0x10\l"]
 "0x0804868b_0x080486d3" [URL="sym.main/0x080486d3", color="lightgray", label="  ; JMP XREF from 0x080486a4 (sym.main)\l  ; JMP XREF from 0x080486bd (sym.main)\l| 0x080486d3   mov eax, 0\l| 0x080486d8   lea esp, [ebp-local_2]\l| 0x080486db   pop ecx\l| 0x080486dc   pop ebx\l| 0x080486dd   pop ebp\l| 0x080486de   lea esp, [ecx - 4]\l\\ 0x080486e1   ret\l"]
	"0x08048968_0x08048968" -> "0x08048968_0x08048a55" [color="blue"];
 "0x08048968_0x08048968" [URL="sym.unpack/0x08048968", color="lightgray", label="/ (fcn) sym.unpack 301\l| ; arg int arg_42_2     @ ebp+0xaa\l| ; arg int arg_56       @ ebp+0xe0\l| ; arg int arg_57_2     @ ebp+0xe6\l| ; arg int arg_58_1     @ ebp+0xe9\l| ; arg int arg_60_1     @ ebp+0xf1\l| ; arg int arg_60_3     @ ebp+0xf3\l| ; arg int arg_61       @ ebp+0xf4\l| ; arg int arg_61_1     @ ebp+0xf5\l| ; arg int arg_61_3     @ ebp+0xf7\l| ; arg int arg_62_1     @ ebp+0xf9\l| ; arg int arg_62_3     @ ebp+0xfb\l| ; arg int arg_63       @ ebp+0xfc\l| ; arg int arg_63_1     @ ebp+0xfd\l| ; arg int arg_63_2     @ ebp+0xfe\l| ; arg int arg_63_3     @ ebp+0xff\l| ; arg int arg_33628160 @ ebp+0x8048000\l| ; arg int arg_33628874 @ ebp+0x8048b28\l| ; var int local_2      @ ebp-0x8\l| ; var int local_3      @ ebp-0xc\l| ; var int local_4      @ ebp-0x10\l| ; var int local_5      @ ebp-0x14\l| ; var int local_6      @ ebp-0x18\l| ; var int local_7      @ ebp-0x1c\l| ; var int local_7_1    @ ebp-0x1d\l| ; var int local_7_2    @ ebp-0x1e\l| ; var int local_12     @ ebp-0x30\l| ; CALL XREF from 0x0804869c (sym.main)\l| ;-- sym.unpack:\l| 0x08048968   push ebp\l| 0x08048969   mov ebp, esp\l| 0x0804896b   push esi\l| 0x0804896c   push ebx\l| 0x0804896d   sub esp, 0x30\l| 0x08048970   mov dword [ebp-local_4], sym.__executable_start          ; [0x8048000:4]=0x464c457f  ; section.ehdr\l| 0x08048977   mov dword [ebp-local_5], sym.__etext                     ; [0x8048b28:4]=3 ; section..rodata\l| 0x0804897e   mov eax, dword [ebp-local_5]\l| 0x08048981   sub eax, dword [ebp-local_4]\l| 0x08048984   mov edx, eax\l| 0x08048986   mov eax, dword [ebp-local_4]\l| 0x08048989   sub esp, 4\l| 0x0804898c   push 6\l| 0x0804898e   push edx\l| 0x0804898f   push eax\l| 0x08048990   call sym.imp.mprotect                                    ; fcn.0804848c+0x4\l|    fcn.0804848c(unk, unk, unk) ; sym.imp.mprotect\l| 0x08048995   add esp, 0x10\l| 0x08048998   mov dword [ebp-local_6], 0xaa                            ; [0xaa:4]=0x60000 \l| 0x0804899f   mov byte [ebp-local_12], 0xf9                            ; [0xf9:1]=11\l| 0x080489a3   mov byte [ebp - 0x2f], 0xfc                              ; [0xfc:1]=136\l| 0x080489a7   mov byte [ebp - 0x2e], 0xff                              ; [0xff:1]=8\l| 0x080489ab   mov byte [ebp - 0x2d], 0xe6                              ; [0xe6:1]=0\l| 0x080489af   mov byte [ebp - 0x2c], 0xf5                              ; [0xf5:1]=229\l| 0x080489b3   mov byte [ebp - 0x2b], 0xe0                              ; [0xe0:1]=72 ; \"H...D\" @ 0xe0\l| 0x080489b7   mov byte [ebp - 0x2a], 0xf1                              ; [0xf1:1]=0\l| 0x080489bb   mov byte [ebp - 0x29], 0xf3                              ; [0xf3:1]=0\l| 0x080489bf   mov byte [ebp - 0x28], 0xfb                              ; [0xfb:1]=0\l| 0x080489c3   mov byte [ebp - 0x27], 0xf9                              ; [0xf9:1]=11\l| 0x080489c7   mov byte [ebp - 0x26], 0xfe                              ; [0xfe:1]=4\l| 0x080489cb   mov byte [ebp - 0x25], 0xf7                              ; [0xf7:1]=100 ; \"d..\" @ 0xf7\l| 0x080489cf   mov byte [ebp - 0x24], 0xfd                              ; [0xfd:1]=139\l| 0x080489d3   mov byte [ebp - 0x23], 0xe9                              ; [0xe9:1]=0\l| 0x080489d7   mov byte [ebp - 0x22], 0xf3                              ; [0xf3:1]=0\l| 0x080489db   mov byte [ebp - 0x21], 0xff                              ; [0xff:1]=8\l| 0x080489df   mov byte [ebp - 0x20], 0xf4                              ; [0xf4:1]=80 ; \"P.td..\" @ 0xf4\l| 0x080489e3   mov byte [ebp - 0x1f], 0xf5                              ; [0xf5:1]=229\l| 0x080489e7   mov byte [ebp-local_7_2], 0\l| 0x080489eb   mov eax, dword [ebp-local_6]\l| 0x080489ee   add eax, 1\l| 0x080489f1   sub esp, 8\l| 0x080489f4   push 1\l| 0x080489f6   push eax\l| 0x080489f7   call sym.imp.calloc\l|    sym.imp.calloc(unk, unk)\l| 0x080489fc   add esp, 0x10\l| 0x080489ff   mov dword [ebp-local_7], eax\l| 0x08048a02   mov dword [ebp-local_3], 0\l| 0x08048a09   jmp 0x8048a55                                          \l"]
	"0x08048968_0x08048a55" -> "0x08048968_0x08048a0b" [color="green"];
	"0x08048968_0x08048a55" -> "0x08048968_0x08048a5d" [color="red"];
 "0x08048968_0x08048a55" [URL="sym.unpack/0x08048a55", color="lightgray", label="  ; JMP XREF from 0x08048a09 (sym.unpack)\l| 0x08048a55   mov eax, dword [ebp-local_6]\l| 0x08048a58   cmp eax, dword [ebp-local_3]\l| 0x08048a5b   ja 0x8048a0b                                           \l"]
	"0x08048968_0x08048a0b" -> "0x08048968_0x08048a55" [color="blue"];
 "0x08048968_0x08048a0b" [URL="sym.unpack/0x08048a0b", color="lightgray", label="  ; JMP XREF from 0x08048a5b (sym.unpack)\l| 0x08048a0b   mov eax, dword [ebp-local_3]\l| 0x08048a0e   add eax, sym.func_to_pack\l| 0x08048a13   movzx eax, byte [eax]\l| 0x08048a16   mov byte [ebp-local_7_1], al\l| 0x08048a19   mov edx, dword [ebp-local_7]\l| 0x08048a1c   mov eax, dword [ebp-local_3]\l| 0x08048a1f   lea ebx, [edx + eax]\l| 0x08048a22   movzx eax, byte [ebp-local_7_1]\l| 0x08048a26   xor eax, 0xffffff90\l| 0x08048a29   mov esi, eax\l| 0x08048a2b   sub esp, 0xc\l| 0x08048a2e   lea eax, [ebp-local_12]\l| 0x08048a31   push eax\l| 0x08048a32   call sym.imp.strlen\l|    sym.imp.strlen(unk)\l| 0x08048a37   add esp, 0x10\l| 0x08048a3a   mov ecx, eax\l| 0x08048a3c   mov eax, dword [ebp-local_3]\l| 0x08048a3f   mov edx, 0\l| 0x08048a44   div ecx\l| 0x08048a46   mov eax, edx\l| 0x08048a48   movzx eax, byte [ebp + eax - 0x30]\l| 0x08048a4d   xor eax, esi\l| 0x08048a4f   mov byte [ebx], al\l| 0x08048a51   add dword [ebp-local_3], 1\l"]
 "0x08048968_0x08048a5d" [URL="sym.unpack/0x08048a5d", color="lightgray", label="| 0x08048a5d   mov eax, dword [ebp-local_6]\l| 0x08048a60   sub esp, 4\l| 0x08048a63   push eax\l| 0x08048a64   push dword [ebp-local_7]\l| 0x08048a67   push sym.func_to_pack                                   ; \"<....X.&.ingm.&...,... .......(...!...*...$.?.+...&...,.ovep.^.,.b.xcoa..hgy.p.&..;..<kn.j.l]3....&..\".x.`.eQ..q.5.bkin.(.b...`.....a.y..k.I.kl.......q.{..k.C.kl.......q..U....X.E...E...E...E...E.\" @ 0x80486e2\l| 0x08048a6c   call sym.imp.memcpy\l|    sym.imp.memcpy(unk, unk, unk)\l| 0x08048a71   add esp, 0x10\l| 0x08048a74   mov eax, dword [ebp-local_5]\l| 0x08048a77   sub eax, dword [ebp-local_4]\l| 0x08048a7a   mov edx, eax\l| 0x08048a7c   mov eax, dword [ebp-local_4]\l| 0x08048a7f   sub esp, 4\l| 0x08048a82   push 4\l| 0x08048a84   push edx\l| 0x08048a85   push eax\l| 0x08048a86   call sym.imp.mprotect                                    ; fcn.0804848c+0x4\l|    fcn.0804848c(unk, unk, unk) ; sym.imp.mprotect\l| 0x08048a8b   add esp, 0x10\l| 0x08048a8e   lea esp, [ebp-local_2]\l| 0x08048a91   pop ebx\l| 0x08048a92   pop esi\l| 0x08048a93   pop ebp\l\\ 0x08048a94   ret\l"]
	"0x08048aa0_0x08048aa0" -> "0x08048aa0_0x08048af9" [color="green"];
	"0x08048aa0_0x08048aa0" -> "0x08048aa0_0x08048ad2" [color="red"];
 "0x08048aa0_0x08048aa0" [URL="sym.__libc_csu_init/0x08048aa0", color="lightgray", label="/ (fcn) sym.__libc_csu_init 97\l| ; DATA XREF from 0x080485a0 (entry0)\l| ;-- sym.__libc_csu_init:\l| 0x08048aa0   push ebp\l| 0x08048aa1   push edi\l| 0x08048aa2   xor edi, edi\l| 0x08048aa4   push esi\l| 0x08048aa5   push ebx\l| 0x08048aa6   call sym.__x86.get_pc_thunk.bx\l|    sym.__x86.get_pc_thunk.bx(unk, unk, unk, unk)\l| 0x08048aab   add ebx, 0x134d\l| 0x08048ab1   sub esp, 0x1c\l| 0x08048ab4   mov ebp, dword [esp + 0x30]                              ; [0x30:4]=0x1b001e  ; '0'\l| 0x08048ab8   lea esi, [ebx - 0xf4]\l| 0x08048abe   call section..init\l|    section..init() ; sym._init\l| 0x08048ac3   lea eax, [ebx - 0xfc]\l| 0x08048ac9   sub esi, eax\l| 0x08048acb   sar esi, 2\l| 0x08048ace   test esi, esi\l| 0x08048ad0   je 0x8048af9                                           \l"]
 "0x08048aa0_0x08048af9" [URL="sym.__libc_csu_init/0x08048af9", color="lightgray", label="  ; JMP XREF from 0x08048ad0 (sym.__libc_csu_init)\l| 0x08048af9   add esp, 0x1c\l| 0x08048afc   pop ebx\l| 0x08048afd   pop esi\l| 0x08048afe   pop edi\l| 0x08048aff   pop ebp\l\\ 0x08048b00   ret\l"]
	"0x08048aa0_0x08048ad2" -> "0x08048aa0_0x08048ad8" [color="blue"];
 "0x08048aa0_0x08048ad2" [URL="sym.__libc_csu_init/0x08048ad2", color="lightgray", label="| 0x08048ad2   lea esi, [esi]\l"]
	"0x08048aa0_0x08048ad8" -> "0x08048aa0_0x08048ad8" [color="green"];
	"0x08048aa0_0x08048ad8" -> "0x08048aa0_0x08048af9" [color="red"];
 "0x08048aa0_0x08048ad8" [URL="sym.__libc_csu_init/0x08048ad8", color="lightgray", label="  ; JMP XREF from 0x08048af7 (sym.__libc_csu_init)\l| 0x08048ad8   mov eax, dword [esp + 0x38]                              ; [0x38:4]=52 ; '8'\l| 0x08048adc   mov dword [esp], ebp\l| 0x08048adf   mov dword [esp + 8], eax                                 ; [0x8:4]=0\l| 0x08048ae3   mov eax, dword [esp + 0x34]                              ; [0x34:4]=6 ; '4'\l| 0x08048ae7   mov dword [esp + 4], eax                                 ; [0x4:4]=0x10101 \l| 0x08048aeb   call dword [ebx + edi*4 - 0xfc]\l|    unk() ; section_end.phdr1+-134524157\l| 0x08048af2   add edi, 1\l| 0x08048af5   cmp edi, esi\l| 0x08048af7   jne 0x8048ad8                                          \l"]
	"0x08048b01_0x08048b01" -> "0x08048b01_0x08048b10" [color="blue"];
 "0x08048b01_0x08048b01" [URL="fcn.08048b01/0x08048b01", color="lightgray", label="/ (fcn) fcn.08048b01 17\l| ;-- fcn.08048b01:\l| 0x08048b01   jmp sym.__libc_csu_fini                                \l"]
 "0x08048b01_0x08048b10" [URL="fcn.08048b01/0x08048b10", color="lightgray", label="  ; JMP XREF from 0x08048b01 (fcn.08048b01)\l  ; DATA XREF from 0x0804859b (entry0)\l  ;-- sym.__libc_csu_fini:\l\\ 0x08048b10   ret\l"]
 "0x08048b12_0x08048b12" [URL="section_end..text/0x08048b12", color="lightgray", label="/ (fcn) section_end..text 22\l| ;-- section_end..text:\l| 0x08048b12   add byte [eax], al\l| ;-- sym._fini:\l| ;-- section..fini:\l| 0x08048b14   push ebx                                                ; [13] va=0x08048b14 pa=0x00000b14 sz=20 vsz=20 rwx=-r-x .fini\l| 0x08048b15   sub esp, 8\l| 0x08048b18   call sym.__x86.get_pc_thunk.bx\l|    sym.__x86.get_pc_thunk.bx()\l| 0x08048b1d   add ebx, 0x12db\l| 0x08048b23   add esp, 8\l| 0x08048b26   pop ebx\l\\ 0x08048b27   ret\l"]
 "0x08048520_0x08048520" [URL="sym.imp.strlen/0x08048520", color="lightgray", label="/ (fcn) sym.imp.strlen 6\l| ; CALL XREF from 0x080486b2 (sym.main)\l| ; CALL XREF from 0x08048a32 (sym.unpack)\l| ;-- sym.imp.strlen:\l| 0x08048520   jmp dword [reloc.strlen_40]                             ; \"&...6...F...V...f...v.......\" @ 0x8049e28\l"]
	"0x08048526_0x08048526" -> "0x08048526_0x08048480" [color="blue"];
 "0x08048526_0x08048526" [URL="fcn.08048526/0x08048526", color="lightgray", label="/ (fcn) fcn.08048526 10\l| 0x08048526   push 0x48                                               ; 'H'\l\\ 0x0804852b   jmp section..plt\l"]
	"0x080486e2_0x080486a9" -> "0x080486e2_0x080486d3" [color="blue"];
 "0x080486e2_0x080486a9" [URL="sym.func_to_pack/0x080486a9", color="lightgray", label="  ; JMP XREF from 0x0804871c (sym.func_to_pack)\l| 0x080486a9   add eax, 4\l| 0x080486ac   mov eax, dword [eax]\l| 0x080486ae   sub esp, 0xc\l| 0x080486b1   push eax\l| 0x080486b2   call sym.imp.strlen\l|    sym.imp.strlen(unk)\l| 0x080486b7   add esp, 0x10\l| 0x080486ba   cmp eax, 0xa\l| 0x080486bd   jne 0x80486d3                                          \l"]
	"0x080486e2_0x080486bf" -> "0x080486e2_0x080486d3" [color="blue"];
 "0x080486e2_0x080486bf" [URL="sym.func_to_pack/0x080486bf", color="lightgray", label="| 0x080486bf   mov eax, dword [ebx + 4]                                 ; [0x4:4]=0x10101 \l| 0x080486c2   add eax, 4\l| 0x080486c5   mov eax, dword [eax]\l| 0x080486c7   sub esp, 0xc\l| 0x080486ca   push eax\l| 0x080486cb   call sym.func_to_pack\l|    sym.func_to_pack(unk)\l| 0x080486d0   add esp, 0x10\l"]
 "0x080486e2_0x080486d3" [URL="sym.func_to_pack/0x080486d3", color="lightgray", label="  ; JMP XREF from 0x080486a4 (sym.main)\l  ; JMP XREF from 0x080486bd (sym.main)\l| 0x080486d3   mov eax, 0\l| 0x080486d8   lea esp, [ebp-local_2]\l| 0x080486db   pop ecx\l| 0x080486dc   pop ebx\l| 0x080486dd   pop ebp\l| 0x080486de   lea esp, [ecx - 4]\l\\ 0x080486e1   ret\l"]
	"0x080486e2_0x080486e2" -> "0x080486e2_0x080486a9" [color="blue"];
 "0x080486e2_0x080486e2" [URL="sym.func_to_pack/0x080486e2", color="lightgray", label="/ (fcn) sym.func_to_pack 65\l| ; var int local_2      @ ebp-0x8\l| ; CALL XREF from 0x080486cb (sym.main)\l| ; DATA XREF from 0x08048a67 (sym.unpack)\l| ;-- sym.func_to_pack:\l| 0x080486e2   cmp al, 0xe5\l| 0x080486e4   mov dh, ch\l| 0x080486e6   mov dword [eax - 0x5a], ebx\l| 0x080486e9   lahf\l| 0x080486eb   imul ebp, dword [esi + 0x67], 0x8a26bf6d\l| 0x080486f2   fsub dword [ebx - 0x4fea75d4]\l| 0x080486f8   and byte [edi - 0x7ed15a08], dl\l| 0x080486fe   mov dl, 0xa1\l| 0x08048700   sub byte [eax - 0x70de5610], dl\l| 0x08048706   shr byte [edx - 0x491962d6], cl\l| 0x0804870c   and al, 0x8f\l| 0x0804870e   aas\l| 0x0804870f   scasd eax, dword es:[edi]\l| 0x08048710   sub ecx, dword [edx - 0x7ed94064]\l| 0x08048716   test dword [edx + 0x766f9c2c], esp                       ; [0x1e:4]=0x18440000 \l| 0x0804871c   jo 0x80486a9                                             ; sym.main+0x1e\l"]
 "0x080486e2_0x0804871f" [URL="sym.func_to_pack/0x0804871f", color="lightgray", label="| 0x0804871f   pop esi\l| 0x08048720   loopne 0x804874e\l\\ 0x08048722   sahf\l"]
	"0x0804878d_0x0804878d" -> "0x0804878d_0x0804888a" [color="blue"];
 "0x0804878d_0x0804878d" [URL="sym.check/0x0804878d", color="lightgray", label="/ (fcn) sym.check 475\l| ; arg int arg_3        @ ebp+0xc\l| ; arg int arg_4        @ ebp+0x10\l| ; arg int arg_4_1      @ ebp+0x11\l| ; arg int arg_4_2      @ ebp+0x12\l| ; arg int arg_4_3      @ ebp+0x13\l| ; arg int arg_5_2      @ ebp+0x16\l| ; arg int arg_6_1      @ ebp+0x19\l| ; arg int arg_6_2      @ ebp+0x1a\l| ; arg int arg_7        @ ebp+0x1c\l| ; arg int arg_15_1     @ ebp+0x3d\l| ; arg int arg_17_3     @ ebp+0x47\l| ; arg int arg_19_3     @ ebp+0x4f\l| ; arg int arg_20_2     @ ebp+0x52\l| ; arg int arg_21_1     @ ebp+0x55\l| ; arg int arg_22       @ ebp+0x58\l| ; var int local_0      @ ebp-0x0\l| ; var int local_3      @ ebp-0xc\l| ; var int local_4      @ ebp-0x10\l| ; var int local_5      @ ebp-0x14\l| ; var int local_6      @ ebp-0x18\l| ; var int local_6_1    @ ebp-0x19\l| ; var int local_8_2    @ ebp-0x22\l| ; var int local_8_3    @ ebp-0x23\l| ; var int local_9_2    @ ebp-0x26\l| ; var int local_11_3   @ ebp-0x2f\l| ; var int local_12     @ ebp-0x30\l| ; var int local_12_2   @ ebp-0x32\l| ; var int local_13_1   @ ebp-0x35\l| ; var int local_13_3   @ ebp-0x37\l| ; var int local_14_1   @ ebp-0x39\l| ; var int local_14_2   @ ebp-0x3a\l| ; var int local_15     @ ebp-0x3c\l| ; var int local_16_1   @ ebp-0x41\l| ; var int local_16_3   @ ebp-0x43\l| ; var int local_17_2   @ ebp-0x46\l| ; var int local_18     @ ebp-0x48\l| ; var int local_18_1   @ ebp-0x49\l| ; var int local_18_3   @ ebp-0x4b\l| ; var int local_19     @ ebp-0x4c\l| ;-- sym.check:\l| 0x0804878d   push ebp\l| 0x0804878e   mov ebp, esp\l| 0x08048790   sub esp, 0x58\l| 0x08048793   mov byte [ebp-local_19], 0x19                            ; [0x19:1]=133\l| 0x08048797   mov byte [ebp-local_18_3], 6\l| 0x0804879b   mov byte [ebp - 0x4a], 0x16                              ; [0x16:1]=0\l| 0x0804879f   mov byte [ebp-local_18_1], 5\l| 0x080487a3   mov byte [ebp-local_18], 0\l| 0x080487a7   mov byte [ebp-arg_17_3], 0x55                            ; [0x55:1]=0 ; 'U'\l| 0x080487ab   mov byte [ebp-local_17_2], 9\l| 0x080487af   mov byte [ebp - 0x45], 0x55                              ; [0x55:1]=0 ; 'U'\l| 0x080487b3   mov byte [ebp - 0x44], 0x12                              ; [0x12:1]=3\l| 0x080487b7   mov byte [ebp-local_16_3], 7\l| 0x080487bb   mov byte [ebp - 0x42], 0x10                              ; [0x10:1]=2\l| 0x080487bf   mov byte [ebp-local_16_1], 5\l| 0x080487c3   mov byte [ebp - 0x40], 0x55                              ; [0x55:1]=0 ; 'U'\l| 0x080487c7   mov byte [ebp - 0x3f], 0x52                              ; [0x52:1]=0 ; 'R'\l| 0x080487cb   mov byte [ebp - 0x3e], 0x3d                              ; [0x3d:1]=128 ; '='\l| 0x080487cf   mov byte [ebp-arg_15_1], 0xc                             ; [0xc:1]=0\l| 0x080487d3   mov byte [ebp-local_15], 5\l| 0x080487d7   mov byte [ebp - 0x3b], 0x10                              ; [0x10:1]=2\l| 0x080487db   mov byte [ebp-local_14_2], 7\l| 0x080487df   mov byte [ebp-local_14_1], 3\l| 0x080487e3   mov byte [ebp - 0x38], 0x1c                              ; [0x1c:1]=52\l| 0x080487e7   mov byte [ebp-local_13_3], 6\l| 0x080487eb   mov byte [ebp - 0x36], 0x1a                              ; [0x1a:1]=4\l| 0x080487ef   mov byte [ebp-local_13_1], 7\l| 0x080487f3   mov byte [ebp - 0x34], 0x52                              ; [0x52:1]=0 ; 'R'\l| 0x080487f7   mov byte [ebp - 0x33], 0x55                              ; [0x55:1]=0 ; 'U'\l| 0x080487fb   mov byte [ebp-local_12_2], 9\l| 0x080487ff   mov byte [ebp - 0x31], 0x55                              ; [0x55:1]=0 ; 'U'\l| 0x08048803   mov byte [ebp-local_12], 1\l| 0x08048807   mov byte [ebp-local_11_3], 7\l| 0x0804880b   mov byte [ebp - 0x2e], 0x55                              ; [0x55:1]=0 ; 'U'\l| 0x0804880f   mov byte [ebp - 0x2d], 0x58                              ; [0x58:1]=52 ; 'X' ; \"4.\" @ 0x58\l| 0x08048813   mov byte [ebp - 0x2c], 0x11                              ; [0x11:1]=0\l| 0x08048817   mov byte [ebp - 0x2b], 0x55                              ; [0x55:1]=0 ; 'U'\l| 0x0804881b   mov byte [ebp - 0x2a], 0x52                              ; [0x52:1]=0 ; 'R'\l| 0x0804881f   mov byte [ebp - 0x29], 0x55                              ; [0x55:1]=0 ; 'U'\l| 0x08048823   mov byte [ebp - 0x28], 0x52                              ; [0x52:1]=0 ; 'R'\l| 0x08048827   mov byte [ebp - 0x27], 0x55                              ; [0x55:1]=0 ; 'U'\l| 0x0804882b   mov byte [ebp-local_9_2], 9\l| 0x0804882f   mov byte [ebp - 0x25], 0x55                              ; [0x55:1]=0 ; 'U'\l| 0x08048833   mov byte [ebp - 0x24], 0x16                              ; [0x16:1]=0\l| 0x08048837   mov byte [ebp-local_8_3], 0\l| 0x0804883b   mov byte [ebp-local_8_2], 1\l| 0x0804883f   mov byte [ebp - 0x21], 0x55                              ; [0x55:1]=0 ; 'U'\l| 0x08048843   mov byte [ebp - 0x20], 0x58                              ; [0x58:1]=52 ; 'X' ; \"4.\" @ 0x58\l| 0x08048847   mov byte [ebp - 0x1f], 0x11                              ; [0x11:1]=0\l| 0x0804884b   mov byte [ebp - 0x1e], 0x4f                              ; [0x4f:1]=0 ; 'O'\l| 0x0804884f   mov byte [ebp - 0x1d], 0x55                              ; [0x55:1]=0 ; 'U'\l| 0x08048853   mov byte [ebp-arg_7], 0x58                               ; [0x58:1]=52 ; 'X' ; \"4.\" @ 0x58\l| 0x08048857   mov byte [ebp - 0x1b], 0x13                              ; [0x13:1]=0\l| 0x0804885b   mov byte [ebp-arg_6_2], 0x47                             ; [0x47:1]=0 ; 'G'\l| 0x0804885f   mov byte [ebp-local_6_1], 0\l| 0x08048863   mov dword [ebp-local_3], 0\l| 0x0804886a   jmp 0x804888a                                          \l"]
	"0x0804878d_0x0804888a" -> "0x0804878d_0x0804886c" [color="green"];
	"0x0804878d_0x0804888a" -> "0x0804878d_0x08048892" [color="red"];
 "0x0804878d_0x0804888a" [URL="sym.check/0x0804888a", color="lightgray", label="  ; JMP XREF from 0x0804886a (sym.check)\l| 0x0804888a   mov eax, dword [ebp-local_3]\l| 0x0804888d   cmp eax, 0x32                                           ; '2'\l| 0x08048890   jbe 0x804886c                                          \l"]
	"0x0804878d_0x0804886c" -> "0x0804878d_0x0804888a" [color="blue"];
 "0x0804878d_0x0804886c" [URL="sym.check/0x0804886c", color="lightgray", label="  ; JMP XREF from 0x08048890 (sym.check)\l| 0x0804886c   lea edx, [ebp-local_19]\l| 0x0804886f   mov eax, dword [ebp-local_3]\l| 0x08048872   add eax, edx\l| 0x08048874   movzx eax, byte [eax]\l| 0x08048877   xor eax, 0x75\l| 0x0804887a   mov ecx, eax\l| 0x0804887c   lea edx, [ebp-local_19]\l| 0x0804887f   mov eax, dword [ebp-local_3]\l| 0x08048882   add eax, edx\l| 0x08048884   mov byte [eax], cl\l| 0x08048886   add dword [ebp-local_3], 1\l"]
	"0x0804878d_0x08048892" -> "0x0804878d_0x080488dc" [color="green"];
	"0x0804878d_0x08048892" -> "0x0804878d_0x080488af" [color="red"];
 "0x0804878d_0x08048892" [URL="sym.check/0x08048892", color="lightgray", label="| 0x08048892   sub esp, 8\l| 0x08048895   push 0x8048b4b\l| 0x0804889a   lea eax, [ebp-local_19]\l| 0x0804889d   push eax\l| 0x0804889e   call sym.imp.popen\l|    sym.imp.popen(unk, unk)\l| 0x080488a3   add esp, 0x10\l| 0x080488a6   mov dword [ebp-local_4], eax\l| 0x080488a9   cmp dword [ebp-local_4], 0\l| 0x080488ad   je 0x80488dc                                           \l"]
	"0x0804878d_0x080488dc" -> "0x0804878d_0x08048907" [color="green"];
	"0x0804878d_0x080488dc" -> "0x0804878d_0x080488f8" [color="red"];
 "0x0804878d_0x080488dc" [URL="sym.check/0x080488dc", color="lightgray", label="  ; JMP XREF from 0x080488ad (sym.check)\l  ; JMP XREF from 0x080488c0 (sym.check)\l| 0x080488dc   sub esp, 0xc\l| 0x080488df   push dword [ebp-local_4]\l| 0x080488e2   call sym.imp.fclose\l|    sym.imp.fclose(unk)\l| 0x080488e7   add esp, 0x10\l| 0x080488ea   call sym.imp.fork\l|    sym.imp.fork()\l| 0x080488ef   mov dword [ebp-local_5], eax\l| 0x080488f2   cmp dword [ebp-local_5], 0\l| 0x080488f6   je 0x8048907                                           \l"]
	"0x0804878d_0x08048907" -> "0x0804878d_0x0804893e" [color="green"];
	"0x0804878d_0x08048907" -> "0x0804878d_0x08048924" [color="red"];
 "0x0804878d_0x08048907" [URL="sym.check/0x08048907", color="lightgray", label="  ; JMP XREF from 0x080488f6 (sym.check)\l| 0x08048907   call sym.imp.getppid\l|    sym.imp.getppid()\l| 0x0804890c   mov dword [ebp-local_6], eax\l| 0x0804890f   push 0\l| 0x08048911   push 0\l| 0x08048913   push dword [ebp-local_6]\l| 0x08048916   push 0x10\l| 0x08048918   call sym.imp.ptrace\l|    sym.imp.ptrace(unk, unk, unk, unk)\l| 0x0804891d   add esp, 0x10\l| 0x08048920   test eax, eax\l| 0x08048922   jns 0x804893e                                          \l"]
	"0x0804878d_0x0804893e" -> "0x0804878d_0x08048966" [color="blue"];
 "0x0804878d_0x0804893e" [URL="sym.check/0x0804893e", color="lightgray", label="  ; JMP XREF from 0x08048922 (sym.check)\l| 0x0804893e   sub esp, 0xc\l| 0x08048941   push 1\l| 0x08048943   call sym.imp.sleep\l|    sym.imp.sleep(unk)\l| 0x08048948   add esp, 0x10\l| 0x0804894b   push 0\l| 0x0804894d   push 0\l| 0x0804894f   push dword [ebp-local_6]\l| 0x08048952   push 0x11\l| 0x08048954   call sym.imp.ptrace\l|    sym.imp.ptrace(unk, unk, unk, unk)\l| 0x08048959   add esp, 0x10\l| 0x0804895c   sub esp, 0xc\l| 0x0804895f   push 0\l| 0x08048961   call sym.imp.exit\l|    sym.imp.exit(unk)\l"]
	"0x0804878d_0x08048924" -> "0x0804878d_0x0804893e" [color="blue"];
 "0x0804878d_0x08048924" [URL="sym.check/0x08048924", color="lightgray", label="| 0x08048924   sub esp, 0xc\l| 0x08048927   push str.____You_fool__nobody_debug_me___               ; \"[-] You fool, nobody debug me!!!\" @ 0x8048b64\l| 0x0804892c   call sym.imp.puts\l|    sym.imp.puts(unk)\l| 0x08048931   add esp, 0x10\l| 0x08048934   sub esp, 0xc\l| 0x08048937   push -1\l| 0x08048939   call sym.imp.exit\l|    sym.imp.exit(unk)\l"]
	"0x0804878d_0x080488f8" -> "0x0804878d_0x08048966" [color="blue"];
 "0x0804878d_0x080488f8" [URL="sym.check/0x080488f8", color="lightgray", label="| 0x080488f8   sub esp, 0xc\l| 0x080488fb   push 0\l| 0x080488fd   call sym.imp.wait\l|    sym.imp.wait(unk)\l| 0x08048902   add esp, 0x10\l| 0x08048905   jmp 0x8048966                                          \l"]
 "0x0804878d_0x08048966" [URL="sym.check/0x08048966", color="lightgray", label="  ; JMP XREF from 0x08048905 (sym.check)\l| 0x08048966   leave\l\\ 0x08048967   ret\l"]
	"0x0804878d_0x080488af" -> "0x0804878d_0x080488dc" [color="green"];
	"0x0804878d_0x080488af" -> "0x0804878d_0x080488c2" [color="red"];
 "0x0804878d_0x080488af" [URL="sym.check/0x080488af", color="lightgray", label="| 0x080488af   sub esp, 0xc\l| 0x080488b2   push dword [ebp-local_4]\l| 0x080488b5   call sym.imp.fgetc\l|    sym.imp.fgetc(unk)\l| 0x080488ba   add esp, 0x10\l| 0x080488bd   cmp eax, 0xff\l| 0x080488c0   je 0x80488dc                                           \l"]
	"0x0804878d_0x080488c2" -> "0x0804878d_0x080488dc" [color="blue"];
 "0x0804878d_0x080488c2" [URL="sym.check/0x080488c2", color="lightgray", label="| 0x080488c2   sub esp, 0xc\l| 0x080488c5   push str.____No_vm_please___                            ; \"[-] No vm please ;)\" @ 0x8048b4d\l| 0x080488ca   call sym.imp.puts\l|    sym.imp.puts(unk)\l| 0x080488cf   add esp, 0x10\l| 0x080488d2   sub esp, 0xc\l| 0x080488d5   push -1\l| 0x080488d7   call sym.imp.exit\l|    sym.imp.exit(unk)\l"]
	"0x08048454_0x08048454" -> "0x08048454_0x08048472" [color="green"];
	"0x08048454_0x08048454" -> "0x08048454_0x0804846d" [color="red"];
 "0x08048454_0x08048454" [URL="section..init/0x08048454", color="lightgray", label="/ (fcn) section..init 35\l| ; CALL XREF from 0x08048abe (sym.__libc_csu_init)\l| ;-- sym._init:\l| ;-- section_end..rel.plt:\l| ;-- section..init:\l| 0x08048454   push ebx                                                ; [10] va=0x08048454 pa=0x00000454 sz=35 vsz=35 rwx=-r-x .init\l| 0x08048455   sub esp, 8\l| 0x08048458   call sym.__x86.get_pc_thunk.bx\l|    sym.__x86.get_pc_thunk.bx()\l| 0x0804845d   add ebx, 0x199b\l| 0x08048463   mov eax, dword [ebx - 4]\l| 0x08048469   test eax, eax\l| 0x0804846b   je 0x8048472                                           \l"]
	"0x08048454_0x0804846d" -> "0x08048454_0x08048472" [color="blue"];
 "0x08048454_0x0804846d" [URL="section..init/0x0804846d", color="lightgray", label="| 0x0804846d   call sym.imp.__gmon_start__\l|    sym.imp.__gmon_start__()\l"]
 "0x08048454_0x08048472" [URL="section..init/0x08048472", color="lightgray", label="  ; JMP XREF from 0x0804846b (section..init)\l| 0x08048472   add esp, 8\l| 0x08048475   pop ebx\l\\ 0x08048476   ret\l"]
 "0x08048500_0x08048500" [URL="sym.imp.__gmon_start__/0x08048500", color="lightgray", label="/ (fcn) sym.imp.__gmon_start__ 6\l| ; CALL XREF from 0x0804846d (section..init)\l| ;-- sym.imp.__gmon_start__:\l| 0x08048500   jmp dword [reloc.__gmon_start___32]                     ; reloc.__gmon_start___32\l"]
	"0x08048506_0x08048506" -> "0x08048506_0x08048480" [color="blue"];
 "0x08048506_0x08048506" [URL="fcn.08048506/0x08048506", color="lightgray", label="/ (fcn) fcn.08048506 10\l| 0x08048506   push 0x38                                               ; '8'\l\\ 0x0804850b   jmp section..plt\l"]
 "0x08048510_0x08048510" [URL="sym.imp.exit/0x08048510", color="lightgray", label="/ (fcn) sym.imp.exit 6\l| ; CALL XREF from 0x08048961 (sym.check)\l| ; CALL XREF from 0x08048939 (sym.check)\l| ; CALL XREF from 0x080488d7 (sym.check)\l| ;-- sym.imp.exit:\l| 0x08048510   jmp dword [reloc.exit_36]                               ; reloc.exit_36\l"]
	"0x08048516_0x08048516" -> "0x08048516_0x08048480" [color="blue"];
 "0x08048516_0x08048516" [URL="fcn.08048516/0x08048516", color="lightgray", label="/ (fcn) fcn.08048516 10\l| 0x08048516   push 0x40                                               ; '@'\l\\ 0x0804851b   jmp section..plt\l"]
 "0x08048477_0x08048477" [URL="section_end..init/0x08048477", color="lightgray", label="/ (fcn) section_end..init 21\l| ;-- section_end..init:\l| 0x08048477   add byte [eax], al\l| 0x08048479   add byte [eax], al\l| 0x0804847b   add byte [eax], al\l| 0x0804847d   add byte [eax], al\l| 0x0804847f   add bh, bh\l|- section..plt 12\l| | ; XREFS: JMP 0x0804853b  JMP 0x0804849b  JMP 0x080484ab  \l| ; XREFS: JMP 0x080484bb  JMP 0x080484cb  JMP 0x080484db  \l| ; XREFS: JMP 0x080484eb  JMP 0x0804854b  JMP 0x0804855b  \l| ; XREFS: JMP 0x0804856b  JMP 0x0804857b  JMP 0x0804858b  \l| ; XREFS: JMP 0x0804852b  JMP 0x0804850b  JMP 0x0804851b  \l| ;-- section..plt:\l| 0x08048480   push dword [0x8049dfc]                                  ; [11] va=0x08048480 pa=0x00000480 sz=272 vsz=272 rwx=-r-x .plt\l\\ 0x08048486   jmp dword [0x8049e00]\l"]
}
